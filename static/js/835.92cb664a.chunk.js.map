{"version":3,"file":"static/js/835.92cb664a.chunk.js","mappings":"uOAEaA,EAAmBC,EAAAA,GAAAA,GAAH,6RAYhBC,EAAcD,EAAAA,GAAAA,IAAH,mHAMXE,EAAeF,EAAAA,GAAAA,IAAH,uE,mBCjBV,SAASG,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OACE,iBAAKC,KAAK,QAAQC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,aAAxD,WACE,gBACEF,MAAO,CAAEE,OAAQ,aACjBC,IAAKC,EACLC,MAAM,MACNC,IAAI,wCAEN,wBACE,uBAAIR,S,0BCXCS,EAAiBb,EAAAA,GAAAA,OAAH,qqB,6CCEZ,SAASc,EAAT,GAMX,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,SAEAC,GAEC,EAHDC,OAGC,EAFDD,SACGE,GACF,YACD,OACE,SAACN,GAAD,kBAAoBM,GAApB,IAA2BH,SAAUA,EAAUC,QAASA,EAAxD,SACGF,KAYPD,EAAOM,aAAe,CACpBL,SAAU,iBACVE,QAAS,aACTD,UAAU,EACVE,QAAQ,G,cClBJG,GAAmBC,EAAAA,EAAAA,OAAK,kBAAM,iCAErB,SAASC,EAAT,GAQX,IAPFC,EAOC,EAPDA,iBACAC,EAMC,EANDA,MACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,QACAZ,EACC,EADDA,QAOA,MAAe,SAAXS,GAEA,iBAAKpB,MAAO,CAAEC,UAAW,SAAUuB,SAAU,UAA7C,yDACU,8CADV,4FACsC,oCADtC,MACuD,kBADvD,0RAMW,YAAXJ,GAEK,SAACK,EAAA,EAAD,IAGM,aAAXL,GACK,SAACvB,EAAD,CAAgBC,QAASqB,IAEnB,aAAXC,GAEA,+BACE,UAAC,EAAAM,SAAD,CACEC,UACE,yCAEE,SAACF,EAAA,EAAD,OAJN,WAQE,SAAChC,EAAD,CAAkByB,iBAAkBA,EAApC,SACGA,EAAiBU,KAChB,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAClC,OACE,SAACjB,EAAD,CAEEe,aAAcA,EACdC,cAAeA,EACfC,KAAMA,EACNT,QAASA,GAJJM,QAWdX,EAAiBe,OAASZ,IACzB,+BACE,UAACzB,EAAD,YACE,SAACD,EAAD,WACE,SAACa,EAAD,CACE0B,KAAK,SACLtB,QAAQ,EACRF,UAAU,EACVC,QAASA,EAJX,yBAQa,IACdW,IAAc,SAACG,EAAA,EAAD,mBAxC7B,I","sources":["components/ImageGallery/ImageGallery.styled.jsx","components/FetchErrorView/FetchErrorView.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 15px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const LoadMoreBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 10px 10px;\n  position: relative;\n`;\nexport const LoadMoreWrap = styled.div`\ndisplay: flex;\n  justify-content: center; */\n`;\n","import errorImage from \"../../image/error-img-api.webp\";\nimport PropTypes from \"prop-types\";\n\nexport default function FetchErrorView({ message }) {\n  return (\n    <div role=\"alert\" style={{ textAlign: \"center\", margin: \"10px auto\" }}>\n      <img\n        style={{ margin: \"10px auto\" }}\n        src={errorImage}\n        width=\"240\"\n        alt=\"There are no images with this name\"\n      />\n      <p>\n        <b>{message}</b>\n      </p>\n    </div>\n  );\n}\nFetchErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const ButtonLoadMore = styled.button`\n  max-width: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 30px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  /* border: 0; */\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #41608f;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ButtonLoadMore } from \"./Button.styled\";\n\nexport default function Button({\n  children,\n  disabled,\n  active,\n  onClick,\n  ...attrs\n}) {\n  return (\n    <ButtonLoadMore {...attrs} disabled={disabled} onClick={onClick}>\n      {children}\n    </ButtonLoadMore>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  children: \"Default button\",\n  onClick: () => {},\n  disabled: false,\n  active: false,\n};\n","import React, { lazy, Suspense } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ImageGalleryList,\n  LoadMoreBox,\n  LoadMoreWrap,\n} from \"./ImageGallery.styled\";\nimport FetchErrorView from \"../FetchErrorView\";\nimport Button from \"../Button/\";\nimport Loader from \"../Loader/\";\n// import ImageGalleryItem from \"../ImageGalleryItem\";\nconst ImageGalleryItem = lazy(() => import(\"../ImageGalleryItem\"));\n\nexport default function ImageGallery({\n  searchImageArray,\n  error,\n  status,\n  totalHits,\n  showLoader,\n  modalFn,\n  onClick,\n}) {\n  // применяем метод state mashine где:\n  // \"idle\"- простой,\n  // \"pending\" - ожидаеться,\n  // \"rejected\" - отклонено,\n  // \"resolved\" - выполнился\n  if (status === \"idle\") {\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"larger\" }}>\n        Введите <b>имя</b> и заполните поле <b>per page</b>, <br />\n        для определиния количества результатов на странице.\n      </div>\n    );\n  }\n  if (status === \"pending\") {\n    // return <div>Загружаем...</div>;\n    return <Loader />;\n  }\n\n  if (status === \"rejected\") {\n    return <FetchErrorView message={error} />;\n  }\n  if (status === \"resolved\") {\n    return (\n      <>\n        <Suspense\n          fallback={\n            <div>\n              Loading...\n              <Loader />\n            </div>\n          }\n        >\n          <ImageGalleryList searchImageArray={searchImageArray}>\n            {searchImageArray.map(\n              ({ id, webformatURL, largeImageURL, tags }) => {\n                return (\n                  <ImageGalleryItem\n                    key={id}\n                    webformatURL={webformatURL}\n                    largeImageURL={largeImageURL}\n                    tags={tags}\n                    modalFn={modalFn}\n                  />\n                );\n              }\n            )}\n          </ImageGalleryList>\n\n          {searchImageArray.length < totalHits && (\n            <>\n              <LoadMoreWrap>\n                <LoadMoreBox>\n                  <Button\n                    type=\"button\"\n                    active={true}\n                    disabled={false}\n                    onClick={onClick}\n                  >\n                    Load More\n                  </Button>\n                </LoadMoreBox>{\" \"}\n                {showLoader && <Loader />}\n              </LoadMoreWrap>\n            </>\n          )}\n        </Suspense>\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  searchImageArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      largeImageURL: PropTypes.string,\n      tags: PropTypes.string,\n      webformatURL: PropTypes.string,\n    })\n  ),\n  error: PropTypes.string,\n  status: PropTypes.string.isRequired,\n  totalHits: PropTypes.number,\n  showLoader: PropTypes.bool.isRequired,\n  modalFn: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n"],"names":["ImageGalleryList","styled","LoadMoreBox","LoadMoreWrap","FetchErrorView","message","role","style","textAlign","margin","src","errorImage","width","alt","ButtonLoadMore","Button","children","disabled","onClick","active","attrs","defaultProps","ImageGalleryItem","lazy","ImageGallery","searchImageArray","error","status","totalHits","showLoader","modalFn","fontSize","Loader","Suspense","fallback","map","id","webformatURL","largeImageURL","tags","length","type"],"sourceRoot":""}